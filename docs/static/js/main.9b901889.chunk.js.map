{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","value","token","text","pathName","handleChange","bind","handleSaveClick","componentDidMount","saveNoteOptions","method","headers","body","JSON","stringify","data","this","fetch","then","response","setState","console","log","window","location","pathname","slice","getNoteOptions","event","target","textArea","onChange","placeholder","readOnly","className","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAgFeA,E,kDA5Eb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,MAAM,GACNC,KAAK,IAEP,EAAKC,SAAS,GACd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBAVT,E,8DAYA,IAAD,OACTG,EAAkB,CACtBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAACC,KAAMC,KAAKhB,MAAMC,SAEzCgB,MAAM,gCAAiCR,GACpCS,MAAK,SAAAC,GAAQ,OAAIA,EAAShB,UAC1Be,MAAK,SAACH,GACL,EAAKK,SAAS,CAAClB,MAAOa,IACtBM,QAAQC,IAAI,UAAY,EAAKtB,MAAME,OACnCqB,OAAOC,SAASC,SAAW,EAAKzB,MAAME,W,0CAGxB,IAAD,OACjB,GAAgC,MAA7BqB,OAAOC,SAASC,SAAiB,CAClCT,KAAKZ,SAAWmB,OAAOC,SAASC,SAASC,MAAM,GAC/C,IAAMC,EAAiB,CACrBjB,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMI,KAAKZ,UAEbiB,QAAQC,IAAIN,KAAKZ,UACjBa,MAAM,+BAAgCU,GACnCT,MAAK,SAAAC,GAAQ,OAAIA,EAAShB,UAC1Be,MAAK,SAACH,GACL,EAAKK,SAAS,CAACnB,MAAOc,IACtBM,QAAQC,IAAI,YAAcP,S,mCAMrBa,GACXZ,KAAKI,SAAS,CACZnB,MAAO2B,EAAMC,OAAO5B,U,+BAKtB,IAAI6B,EAMJ,OAJEA,EADmB,KAAlBd,KAAKZ,SACK,0BAAUH,MAAOe,KAAKhB,MAAMC,MAAO8B,SAAUf,KAAKX,aAAc2B,YAAY,0BAE5E,0BAAU/B,MAAOe,KAAKhB,MAAMC,MAAO8B,SAAUf,KAAKX,aAAc2B,YAAY,wBAAwBC,UAAQ,IAGvH,sBAAKC,UAAU,YAAf,UACqB,KAAlBlB,KAAKZ,UACJ,+CAED0B,EACkB,KAAlBd,KAAKZ,UACJ,wBAAQ8B,UAAU,cAAcC,QAASnB,KAAKT,gBAA9C,SACE,gCACE,mBAAG2B,UAAU,2BAAb,kBACA,iD,GArEIE,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.9b901889.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      value: \"\",\n      token:\"\",\n      text:\"\"\n    }\n    this.pathName=\"\";\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  handleSaveClick(){\n    const saveNoteOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({data: this.state.value})\n    };  \n    fetch('http://34.91.60.161:7373/save', saveNoteOptions)\n      .then(response => response.text())\n      .then((data) => {\n        this.setState({token: data})\n        console.log(\"token: \" + this.state.token);\n        window.location.pathname = this.state.token;\n      });\n  }\n  componentDidMount(){\n    if(window.location.pathname !== \"/\"){\n      this.pathName = window.location.pathname.slice(1)\n      const getNoteOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: this.pathName\n      };\n      console.log(this.pathName);\n      fetch('http://34.91.60.161:7373/get', getNoteOptions)\n        .then(response => response.text())\n        .then((data) => {\n          this.setState({value: data})\n          console.log(\"value is \" + data);\n        });\n    }\n  }\n  \n  \n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render(){\n    let textArea;\n    if(this.pathName === \"\"){\n      textArea = <textarea value={this.state.value} onChange={this.handleChange} placeholder=\"Enter your note here.\"/>\n    } else {\n      textArea = <textarea value={this.state.value} onChange={this.handleChange} placeholder=\"Enter your note here.\" readOnly />\n    }\n    return (\n      <div className=\"container\">\n        {this.pathName !== \"\" &&\n          <h2>Your Note Is:</h2>\n        }\n        {textArea}\n        {this.pathName === \"\" &&\n          <button className=\"save-button\" onClick={this.handleSaveClick}>\n            <div>\n              <i className=\"save-icon material-icons\">save</i>\n              <p>Save</p>\n            </div>\n          </button>\n        }\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}